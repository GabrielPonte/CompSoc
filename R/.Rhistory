shiny::runApp('CompSoc')
shiny::runApp('CompSoc')
shiny::runApp('CompSoc_git/CompSoc')
my_table <- read.csv("https://raw.githubusercontent.com/GabrielPonte/CompSoc/main/bancos_python.csv")
my_table
my_table$Estado
runApp('CompSoc_git/CompSoc')
shiny::runApp('CompSoc_git/CompSoc/R')
my_table <- read.csv("https://raw.githubusercontent.com/GabrielPonte/CompSoc/main/bancos_python.csv")
colnames(my_table)
my_table <- read.csv("https://raw.githubusercontent.com/GabrielPonte/CompSoc/main/bancos_python.csv")
colnames(my_table)
my_table <- read.csv("https://raw.githubusercontent.com/GabrielPonte/CompSoc/main/bancos_python.csv")
colnames(my_table)
my_table <- read.csv("https://raw.githubusercontent.com/GabrielPonte/CompSoc/main/bancos_python.csv")
my_table
colnames(my_table)
library(shiny)
library(leaflet)
library(shinydashboard)
library(anytime)
library(DT)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
#greenLeafIcon <- makeIcon(fa_png(name = "map-pin"),18,18)
greenLeafIcon <- makeIcon(
iconUrl = "https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png",
iconWidth = 12.5, iconHeight = 20.5,
iconAnchorX = 6, iconAnchorY = 20.5,
shadowUrl = "https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png",
shadowWidth = 0.5, shadowHeight = -17,
shadowAnchorX = 20.5, shadowAnchorY = 20.5
)
ui <- dashboardPage(
dashboardHeader(title = "Bancos Comunitários"),
dashboardSidebar(
sidebarMenu(
menuItem("Seleção de Filtros", tabName = "my_selection"),
menuItem("Mapa", tabName = "my_maps")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "my_maps",
tags$style(type = "text/css", "#map {height: calc(100vh - 80px) !important;}"),
leafletOutput("map")
),
tabItem(tabName = "my_selection",
fluidRow(
box(textInput("bank", label = "Banco Comunitário", placeholder = "Palmas"), width = 4),
box(selectInput("select_state", label = "Estado", choices = c(
"Todos",
"Acre",
"Alagoas",
"Amapá",
"Amazonas",
"Bahia",
"Ceará",
"Espírito Santo",
"Goiás",
"Maranhão",
"Mato Grosso",
"Mato Grosso do Sul",
"Minas Gerais",
"Pará",
"Paraíba",
"Paraná",
"Pernambuco",
"Piauí",
"Rio de Janeiro",
"Rio Grande do Norte",
"Rio Grande do Sul",
"Rondônia",
"Roraima",
"Santa Catarina",
"São Paulo",
"Sergipe",
"Tocantins"
),selected="Todos"), width = 4),
box(dateRangeInput("daterange", label = "Ano de Fundação",format = "yyyy",startview = "year",language = "pt-BR", start = Sys.Date() - 365*30, end = Sys.Date() + 365,
min = Sys.Date() - 365*50, max = Sys.Date() + 365), width = 4)
# box(dateRangeInput("daterange", label = "Ano de Fundação",format = "yyyy",startview = "year",language = "pt-BR", start = Sys.Date() - 365*30, end = Sys.Date() + 365,
#      min = Sys.Date() - 365*50, max = Sys.Date() + 365), width = 4)
),
verbatimTextOutput("text1"),
DT::dataTableOutput("table")
)
)
)
)
server <- function(input, output, session) {
my_table <- read.csv("https://raw.githubusercontent.com/GabrielPonte/CompSoc/main/bancos_python.csv")
#my_table <-  read_sheet('https://docs.google.com/spreadsheets/d/1W8XYVrhcLSCMMp3HHF8zi5kM3gPA8K-nEvi7Xy7tKNY/edit?usp=sharing')
#my_table <- read.csv("C:\\Users\\Cliente\\Documents\\CompSoc\\meu_banco.csv",sep =";")
tot_rows <- nrow(my_table)
col_ano <-my_table$Ano.de.Fundação
col_banco <- my_table$Banco
div_name <- reactive({input$bank})
div_state <- reactive({input$select_state})
div_year <- reactive({input$daterange})
x <- rep(TRUE,tot_rows)
output$table <- renderDataTable({
if (div_name() != ""){
for (i in 1:tot_rows){
if (startsWith(col_banco[i],div_name())==FALSE){
x[i] <- FALSE
}
}
}
if (div_state() != "Todos"){
x2 <- (my_table$Estado)==div_state()
for (i in 1:tot_rows){
if (x2[i] == FALSE){
x[i] = FALSE
}
}
}
if ((div_year()[1] == Sys.Date() - 365*30 &&  div_year()[2] ==Sys.Date() + 365) == FALSE){
init_year <- strtoi(substr(anydate(div_year()[1]),1,4))
end_year <- strtoi(substr(anydate(div_year()[2]),1,4))
for (i in 1:tot_rows){
year_i = (col_ano[i])
if (is.na(year_i)){
x[i] = FALSE
}else if ((year_i>= init_year && year_i <= end_year) == FALSE){
x[i] = FALSE
}
}
}
output$text1 <- renderText(paste("Contagem:",sum(x)))
output$map <- renderLeaflet({
new_table <- my_table[x,]
points <- cbind(new_table$Longitude,new_table$Latitude)
my_popup <- paste("<b>","Banco ", new_table$Banco,"</b><br>")
my_colnames <- colnames(new_table)
for (i in 4:ncol(new_table)){
my_popup <- paste(my_popup,"<br>  - ",my_colnames[i],": ",new_table[[i]])
}
leaflet() %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE)
) %>%
addMarkers(data = points,popup = my_popup
,icon=greenLeafIcon)
})
datatable(my_table[x,], options = list(scrollX = TRUE)) %>%
formatRound(c(2,3),3) # casas decimais pra lat/long
})
}
shinyApp(ui, server)
install.packages(gsub)
install.packages(GSUB)
install.packages(gsubfn)
install.packages("gsubfn")
library(gsubfn)
my_table <- read.csv("https://raw.githubusercontent.com/GabrielPonte/CompSoc/main/bancos_python.csv")
#my_table <-  read_sheet('https://docs.google.com/spreadsheets/d/1W8XYVrhcLSCMMp3HHF8zi5kM3gPA8K-nEvi7Xy7tKNY/edit?usp=sharing')
#my_table <- read.csv("C:\\Users\\Cliente\\Documents\\CompSoc\\meu_banco.csv",sep =";")
my_table
my_colnames <- colnames(new_table)
new_table <- my_table
my_colnames <- colnames(new_table)
my_colnames
gsub("."," ", my_colnames,fixed=TRUE)
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
c()
list()
y <- list()
y.append(list(3))
y <- append(y,list(3))
y
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
colnames(my_table)
colnames(my_table) = name_cols_table
colnames(my_table) = my_colnames
my_table
colnames(my_table)
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
shiny::runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
install.packages('rsconnect')
install.packages("rsconnect")
shiny::runApp('CompSoc_git/CompSoc/R')
shiny::runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
runApp('CompSoc_git/CompSoc/R')
